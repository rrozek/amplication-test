/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  JobPostingSkill as PrismaJobPostingSkill,
} from "@prisma/client";

export class JobPostingSkillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JobPostingSkillCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jobPostingSkill.count(args);
  }

  async jobPostingSkills(
    args: Prisma.JobPostingSkillFindManyArgs
  ): Promise<PrismaJobPostingSkill[]> {
    return this.prisma.jobPostingSkill.findMany(args);
  }
  async jobPostingSkill(
    args: Prisma.JobPostingSkillFindUniqueArgs
  ): Promise<PrismaJobPostingSkill | null> {
    return this.prisma.jobPostingSkill.findUnique(args);
  }
  async createJobPostingSkill(
    args: Prisma.JobPostingSkillCreateArgs
  ): Promise<PrismaJobPostingSkill> {
    return this.prisma.jobPostingSkill.create(args);
  }
  async updateJobPostingSkill(
    args: Prisma.JobPostingSkillUpdateArgs
  ): Promise<PrismaJobPostingSkill> {
    return this.prisma.jobPostingSkill.update(args);
  }
  async deleteJobPostingSkill(
    args: Prisma.JobPostingSkillDeleteArgs
  ): Promise<PrismaJobPostingSkill> {
    return this.prisma.jobPostingSkill.delete(args);
  }
}
