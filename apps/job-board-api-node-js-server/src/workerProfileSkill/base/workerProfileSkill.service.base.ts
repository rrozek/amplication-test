/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  WorkerProfileSkill as PrismaWorkerProfileSkill,
} from "@prisma/client";

export class WorkerProfileSkillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WorkerProfileSkillCountArgs, "select">
  ): Promise<number> {
    return this.prisma.workerProfileSkill.count(args);
  }

  async workerProfileSkills(
    args: Prisma.WorkerProfileSkillFindManyArgs
  ): Promise<PrismaWorkerProfileSkill[]> {
    return this.prisma.workerProfileSkill.findMany(args);
  }
  async workerProfileSkill(
    args: Prisma.WorkerProfileSkillFindUniqueArgs
  ): Promise<PrismaWorkerProfileSkill | null> {
    return this.prisma.workerProfileSkill.findUnique(args);
  }
  async createWorkerProfileSkill(
    args: Prisma.WorkerProfileSkillCreateArgs
  ): Promise<PrismaWorkerProfileSkill> {
    return this.prisma.workerProfileSkill.create(args);
  }
  async updateWorkerProfileSkill(
    args: Prisma.WorkerProfileSkillUpdateArgs
  ): Promise<PrismaWorkerProfileSkill> {
    return this.prisma.workerProfileSkill.update(args);
  }
  async deleteWorkerProfileSkill(
    args: Prisma.WorkerProfileSkillDeleteArgs
  ): Promise<PrismaWorkerProfileSkill> {
    return this.prisma.workerProfileSkill.delete(args);
  }
}
