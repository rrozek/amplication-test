/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Skill as PrismaSkill } from "@prisma/client";

export class SkillServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SkillCountArgs, "select">): Promise<number> {
    return this.prisma.skill.count(args);
  }

  async skills(args: Prisma.SkillFindManyArgs): Promise<PrismaSkill[]> {
    return this.prisma.skill.findMany(args);
  }
  async skill(args: Prisma.SkillFindUniqueArgs): Promise<PrismaSkill | null> {
    return this.prisma.skill.findUnique(args);
  }
  async createSkill(args: Prisma.SkillCreateArgs): Promise<PrismaSkill> {
    return this.prisma.skill.create(args);
  }
  async updateSkill(args: Prisma.SkillUpdateArgs): Promise<PrismaSkill> {
    return this.prisma.skill.update(args);
  }
  async deleteSkill(args: Prisma.SkillDeleteArgs): Promise<PrismaSkill> {
    return this.prisma.skill.delete(args);
  }
}
