/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JobPosting as PrismaJobPosting } from "@prisma/client";

export class JobPostingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JobPostingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jobPosting.count(args);
  }

  async jobPostings(
    args: Prisma.JobPostingFindManyArgs
  ): Promise<PrismaJobPosting[]> {
    return this.prisma.jobPosting.findMany(args);
  }
  async jobPosting(
    args: Prisma.JobPostingFindUniqueArgs
  ): Promise<PrismaJobPosting | null> {
    return this.prisma.jobPosting.findUnique(args);
  }
  async createJobPosting(
    args: Prisma.JobPostingCreateArgs
  ): Promise<PrismaJobPosting> {
    return this.prisma.jobPosting.create(args);
  }
  async updateJobPosting(
    args: Prisma.JobPostingUpdateArgs
  ): Promise<PrismaJobPosting> {
    return this.prisma.jobPosting.update(args);
  }
  async deleteJobPosting(
    args: Prisma.JobPostingDeleteArgs
  ): Promise<PrismaJobPosting> {
    return this.prisma.jobPosting.delete(args);
  }
}
